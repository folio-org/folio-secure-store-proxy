# quarkus configuration
quarkus.application.name=folio-secure-store-proxy
quarkus.http.port=8081
quarkus.http.ssl-port=8443
quarkus.rest.path=secure-store
quarkus.jackson.fail-on-unknown-properties=false
quarkus.jackson.serialization-inclusion=non_null
quarkus.http.record-request-start-time=true
quarkus.smallrye-health.root-path=/admin/health

quarkus.security.security-providers=SunRsaSign,SunJCE
%fips.quarkus.http.ssl.certificate.key-store-file=${SSP_TLS_KEYSTORE_PATH}
%fips.quarkus.http.ssl.certificate.key-store-password=${SSP_TLS_KEYSTORE_PASSWORD}
%fips.quarkus.http.ssl.certificate.key-store-password-key=${SSP_TLS_KEYSTORE_KEY_PASSWORD}
%fips.quarkus.http.ssl.certificate.key-store-file-type=${SSP_TLS_KEY_STORE_FILE_TYPE}
%fips.quarkus.http.ssl.certificate.key-store-provider=${SSP_TLS_KEY_STORE_PROVIDER}

# ###################################
# Quarkus Logging configuration
# ###################################
quarkus.log.level=${ROOT_LOG_LEVEL:INFO}
quarkus.log.category."org.folio.ssp".level=${SSP_LOG_LEVEL:INFO}
#quarkus.log.category."org.bouncycastle.jsse".min-level=TRACE
#quarkus.log.category."org.bouncycastle.jsse".level=TRACE
#quarkus.log.category."org.bouncycastle.jcajce".min-level=TRACE
#quarkus.log.category."org.bouncycastle.jcajce".level=TRACE

# ###################################
# Secret Store configuration
# ###################################
secret-store.type=${SECRET_STORE_TYPE:}
# AWS secret store configuration
secret-store.aws-ssm.region=${SECRET_STORE_AWS_SSM_REGION:}
secret-store.aws-ssm.use-iam=${SECRET_STORE_AWS_SSM_USE_IAM:true}
secret-store.aws-ssm.ecs-credentials-endpoint=${SECRET_STORE_AWS_SSM_ECS_CREDENTIALS_ENDPOINT:}
secret-store.aws-ssm.ecs-credentials-path=${SECRET_STORE_AWS_SSM_ECS_CREDENTIALS_PATH:}
secret-store.aws-ssm.fips-enabled=${SECRET_STORE_AWS_SSM_FIPS_ENABLED:false}
secret-store.aws-ssm.trust-store-path=${SECRET_STORE_AWS_SSM_TRUSTSTORE_PATH:}
secret-store.aws-ssm.trust-store-password=${SECRET_STORE_AWS_SSM_TRUSTSTORE_PASSWORD:}
secret-store.aws-ssm.trust-store-file-type=${SECRET_STORE_AWS_SSM_TRUSTSTORE_FILE_TYPE:}
# Vault secret store configuration
secret-store.vault.token=${SECRET_STORE_VAULT_TOKEN:}
secret-store.vault.address=${SECRET_STORE_VAULT_ADDRESS:}
secret-store.vault.enable-ssl=${SECRET_STORE_VAULT_ENABLE_SSL:false}
secret-store.vault.pem-file-path=${SECRET_STORE_VAULT_PEM_FILE_PATH:}
secret-store.vault.keystore-password=${SECRET_STORE_VAULT_KEYSTORE_PASSWORD:}
secret-store.vault.keystore-file-path=${SECRET_STORE_VAULT_KEYSTORE_FILE_PATH:}
secret-store.vault.truststore-file-path=${SECRET_STORE_VAULT_TRUSTSTORE_FILE_PATH:}

# ###################################
# Secret Store Cache configuration
# ###################################
quarkus.cache.caffeine."entry-cache".initial-capacity=20
quarkus.cache.caffeine."entry-cache".maximum-size=500
quarkus.cache.caffeine."entry-cache".expire-after-write=24h
##quarkus.cache.caffeine."entry-cache".expire-after-access=24h

# ###################################
# Web Client configurations
# ###################################
## 1. Ingress client
web-client.ingress.name=ingress-client
web-client.ingress.pool.max-size=500
web-client.ingress.pool.cleaner-period=5000
# other possible settings (same for other clients but need to replace ingress with egress, keycloak, etc.)
#web-client.ingress.pool.max-size-http2=
#web-client.ingress.pool.event-loop-size=
#web-client.ingress.pool.max-wait-queue-size=
#web-client.ingress.timeout.keep-alive=
#web-client.ingress.timeout.idle=
#web-client.ingress.timeout.read-idle=
#web-client.ingress.timeout.write-idle=
#web-client.ingress.timeout.connect=
#web-client.ingress.decompression-supported=
## 2. Egress client
web-client.egress.name=egress-client
web-client.egress.pool.max-size=1000
web-client.egress.pool.cleaner-period=5000
%fips.web-client.egress.tls.enabled=${SSP_CLIENT_TLS_ENABLED:false}
%fips.web-client.egress.tls.verify-hostname=${WEB_CLIENT_TLS_VERIFY_HOSTNAME:false}
%fips.web-client.egress.tls.trust-store-path=${SSP_CLIENT_TLS_TRUSTSTORE_PATH: }
%fips.web-client.egress.tls.trust-store-password=${SSP_CLIENT_TLS_TRUSTSTORE_PASSWORD: }
%fips.web-client.egress.tls.trust-store-file-type=${SSP_CLIENT_TLS_TRUSTSTORE_FILE_TYPE: }
%fips.web-client.egress.tls.trust-store-provider=${SSP_CLIENT_TLS_TRUSTSTORE_PROVIDER: }
## 3. Keycloak client
web-client.keycloak.name=keycloak-client
web-client.keycloak.pool.max-size=50
%fips.web-client.keycloak.tls.enabled=${KC_CLIENT_TLS_ENABLED:false}
%fips.web-client.keycloak.tls.verify-hostname=${WEB_CLIENT_TLS_VERIFY_HOSTNAME:false}
%fips.web-client.keycloak.tls.trust-store-path=${KC_CLIENT_TLS_TRUSTSTORE_PATH: }
%fips.web-client.keycloak.tls.trust-store-password=${KC_CLIENT_TLS_TRUSTSTORE_PASSWORD: }
%fips.web-client.keycloak.tls.trust-store-file-type=${KC_CLIENT_TLS_TRUSTSTORE_FILE_TYPE: }
%fips.web-client.keycloak.tls.trust-store-provider=${KC_CLIENT_TLS_TRUSTSTORE_PROVIDER: }
## 4. Gateway client
web-client.gateway.name=gateway-client
web-client.gateway.pool.max-size=200
%fips.web-client.gateway.tls.enabled=${GW_CLIENT_TLS_ENABLED:false}
%fips.web-client.gateway.tls.verify-hostname=${WEB_CLIENT_TLS_VERIFY_HOSTNAME:true}
%fips.web-client.gateway.tls.trust-store-path=${GW_CLIENT_TLS_TRUSTSTORE_PATH: }
%fips.web-client.gateway.tls.trust-store-password=${GW_CLIENT_TLS_TRUSTSTORE_PASSWORD: }
%fips.web-client.gateway.tls.trust-store-file-type=${GW_CLIENT_TLS_TRUSTSTORE_FILE_TYPE: }
%fips.web-client.gateway.tls.trust-store-provider=${GW_CLIENT_TLS_TRUSTSTORE_PROVIDER: }

# Cache settings for user / client credentials
credentials.client.cache.initial-capacity=5
credentials.client.cache.max-size=15
credentials.user.cache.initial-capacity=1
credentials.user.cache.max-size=5

# ###################################
# Health check configurations
# ###################################
health-check.filter.no-checks.enabled=true
# following filters can be enabled if needed, but they make sense only if the corresponding health checks are enabled
# and 'no-checks' filter is disabled
#health-check.filter.kafka-simplified.enabled=false
#health-check.filter.module-simplified.enabled=false

# to log complete health check when status is down,
# the log message won't be affected by filters since they are applied afterward
quarkus.log.category."io.smallrye.health.HealthLogging.healthDownStatus".level=INFO
