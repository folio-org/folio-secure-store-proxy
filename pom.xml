<?xml version="1.0"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">

  <modelVersion>4.0.0</modelVersion>
  <groupId>org.folio</groupId>
  <artifactId>folio-secure-store-proxy</artifactId>
  <version>1.0.0-SNAPSHOT</version>
  <description>
    Dedicated service as a proxy for different Secure Store implementations (AWS SSM Parameter Store, Vault etc.)
  </description>
  <packaging>jar</packaging>

  <licenses>
    <license>
      <name>Apache License 2.0</name>
      <url>https://spdx.org/licenses/Apache-2.0</url>
    </license>
  </licenses>

  <properties>
    <java.version>21</java.version>
    <maven.compiler.source>21</maven.compiler.source>
    <maven.compiler.target>21</maven.compiler.target>

    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <quarkus.package.jar.add-runner-suffix>false</quarkus.package.jar.add-runner-suffix>
    <quarkus.platform.group-id>io.quarkus.platform</quarkus.platform.group-id>
    <quarkus.platform.artifact-id>quarkus-bom</quarkus.platform.artifact-id>
    <quarkus.platform.version>3.25.0</quarkus.platform.version>
    <applications-poc-tools.version>3.1.0-SNAPSHOT</applications-poc-tools.version>
    <bcpkix-fips.version>2.1.9</bcpkix-fips.version>

    <lombok.version>1.18.38</lombok.version>

    <!-- Test properties -->
    <wiremock.version>3.13.0</wiremock.version>
    <assertj-core.version>3.27.3</assertj-core.version>
    <mockito-core.version>5.8.0</mockito-core.version>
    <mockito-inline.version>5.2.0</mockito-inline.version>
    <testcontainer.version>1.21.3</testcontainer.version>
    <skipSurefireTests>false</skipSurefireTests>
    <quarkusJacocoEnabled>true</quarkusJacocoEnabled>

    <!-- Plugin properties-->
    <surefire-plugin.version>3.5.3</surefire-plugin.version>
    <compiler-plugin.version>3.14.0</compiler-plugin.version>
    <maven-checkstyle.version>10.26.1</maven-checkstyle.version>
    <jacoco-maven-plugin.version>0.8.13</jacoco-maven-plugin.version>
    <maven-checkstyle-plugin.version>3.6.0</maven-checkstyle-plugin.version>
    <maven-clean-plugin.version>3.5.0</maven-clean-plugin.version>
    <maven-release-plugin.version>3.1.1</maven-release-plugin.version>
    <maven-failsafe-plugin.version>3.5.3</maven-failsafe-plugin.version>
    <folio-java-checkstyle.version>1.1.0</folio-java-checkstyle.version>
    <aws-crt.version>0.38.8</aws-crt.version>

    <sonar.exclusions>
      src/main/java/**/ssp/model/**,
      src/main/java/**/ssp/configuration/**
    </sonar.exclusions>
  </properties>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>${quarkus.platform.group-id}</groupId>
        <artifactId>${quarkus.platform.artifact-id}</artifactId>
        <version>${quarkus.platform.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>

    <dependency>
      <groupId>org.folio</groupId>
      <artifactId>folio-secret-store-common</artifactId>
      <version>${applications-poc-tools.version}</version>
      <exclusions>
        <exclusion>
          <groupId>org.bouncycastle</groupId>
          <artifactId>bc-fips</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>org.folio</groupId>
      <artifactId>folio-auth-openid</artifactId>
      <version>${applications-poc-tools.version}</version>
    </dependency>

    <dependency>
      <groupId>software.amazon.awssdk.crt</groupId>
      <artifactId>aws-crt</artifactId>
      <version>${aws-crt.version}</version>
    </dependency>

    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-rest</artifactId>
    </dependency>

    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-rest-jackson</artifactId>
    </dependency>

    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-cache</artifactId>
    </dependency>

    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-arc</artifactId>
    </dependency>

    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-hibernate-validator</artifactId>
    </dependency>

    <dependency>
      <groupId>org.jboss.logmanager</groupId>
      <artifactId>log4j2-jboss-logmanager</artifactId>
    </dependency>

    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-smallrye-health</artifactId>
    </dependency>

    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-security</artifactId>
    </dependency>

    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-smallrye-openapi</artifactId>
    </dependency>

    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <version>${lombok.version}</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.folio</groupId>
      <artifactId>folio-java-checkstyle</artifactId>
      <version>${folio-java-checkstyle.version}</version>
      <scope>provided</scope>
    </dependency>

    <!-- Test Dependencies-->
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-junit5</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-junit5-internal</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-junit5-mockito</artifactId>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <groupId>org.mockito</groupId>
          <artifactId>mockito-subclass</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-junit-jupiter</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
    </dependency>

    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-inline</artifactId>
      <version>${mockito-inline.version}</version>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <groupId>org.mockito</groupId>
          <artifactId>mockito-core</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>io.rest-assured</groupId>
      <artifactId>rest-assured</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.assertj</groupId>
      <artifactId>assertj-core</artifactId>
      <version>${assertj-core.version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.testcontainers</groupId>
      <artifactId>vault</artifactId>
      <version>${testcontainer.version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-jacoco</artifactId>
      <scope>test</scope>
    </dependency>

  </dependencies>

  <build>
    <finalName>${project.artifactId}-${project.version}-runner</finalName>
    <plugins>
      <plugin>
        <artifactId>maven-clean-plugin</artifactId>
        <version>${maven-clean-plugin.version}</version>
        <executions>
          <execution>
            <id>auto-clean</id>
            <phase>initialize</phase>
            <goals>
              <goal>clean</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>${quarkus.platform.group-id}</groupId>
        <artifactId>quarkus-maven-plugin</artifactId>
        <version>${quarkus.platform.version}</version>
        <extensions>true</extensions>
        <executions>
          <execution>
            <goals>
              <goal>build</goal>
              <goal>generate-code</goal>
              <goal>generate-code-tests</goal>
              <goal>native-image-agent</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-checkstyle-plugin</artifactId>
        <version>${maven-checkstyle-plugin.version}</version>
        <dependencies>
          <dependency>
            <groupId>com.puppycrawl.tools</groupId>
            <artifactId>checkstyle</artifactId>
            <version>${maven-checkstyle.version}</version>
          </dependency>

          <dependency>
            <groupId>org.folio</groupId>
            <artifactId>folio-java-checkstyle</artifactId>
            <version>${folio-java-checkstyle.version}</version>
          </dependency>
        </dependencies>
        <executions>
          <execution>
            <id>verify-style</id>
            <phase>process-classes</phase>
            <goals>
              <goal>check</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <sourceDirectories>
            <sourceDirectory>${project.build.sourceDirectory}</sourceDirectory>
            <sourceDirectory>${project.build.testSourceDirectory}</sourceDirectory>
          </sourceDirectories>
          <failsOnError>true</failsOnError>
          <outputEncoding>UTF-8</outputEncoding>
          <inputEncoding>UTF-8</inputEncoding>
          <violationSeverity>warning</violationSeverity>
          <failOnViolation>true</failOnViolation>
          <logViolationsToConsole>true</logViolationsToConsole>
          <configLocation>folio-checkstyle/checkstyle.xml</configLocation>
          <cacheFile>${basedir}/target/cachefile</cacheFile>
        </configuration>
      </plugin>

      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${compiler-plugin.version}</version>
        <configuration>
          <parameters>true</parameters>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <goals>
              <goal>properties</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${surefire-plugin.version}</version>
        <configuration>
          <systemPropertyVariables>
            <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>
            <maven.home>${maven.home}</maven.home>
            <quarkus.jacoco.enabled>${quarkusJacocoEnabled}</quarkus.jacoco.enabled>
            <quarkus.jacoco.data-file>${project.build.directory}/jacoco.exec</quarkus.jacoco.data-file>
          </systemPropertyVariables>
          <useSystemClassLoader>false</useSystemClassLoader>
          <groups>unit</groups>
          <skip>${skipSurefireTests}</skip>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
        <version>${maven-failsafe-plugin.version}</version>
        <configuration>
          <groups>integration</groups>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>integration-test</goal>
              <goal>verify</goal>
            </goals>
            <configuration>
              <systemPropertyVariables>
                <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>
                <maven.home>${maven.home}</maven.home>
                <quarkus.jacoco.enabled>${quarkusJacocoEnabled}</quarkus.jacoco.enabled>
                <quarkus.jacoco.data-file>${project.build.directory}/jacoco.exec</quarkus.jacoco.data-file>
                <quarkus.jacoco.reuse-data-file>true</quarkus.jacoco.reuse-data-file>
                <quarkus.test.arg-line>${argLine}</quarkus.test.arg-line>
              </systemPropertyVariables>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-release-plugin</artifactId>
        <version>${maven-release-plugin.version}</version>
        <configuration>
          <preparationGoals>clean verify</preparationGoals>
          <tagNameFormat>v@{project.version}</tagNameFormat>
          <pushChanges>false</pushChanges>
          <localCheckout>true</localCheckout>
        </configuration>
      </plugin>

    </plugins>
  </build>

  <profiles>
    <profile>
      <id>native</id>
      <activation>
        <property>
          <name>native</name>
        </property>
      </activation>
      <properties>
        <skipITs>false</skipITs>
        <quarkus.native.additional-build-args>
          -march=native,\
          --initialize-at-run-time=org.apache.http.impl.auth.NTLMEngineImpl,\
          --initialize-at-run-time=com.bettercloud.vault.rest.Rest,\
          -H:ReflectionConfigurationFiles=reflection-config.json
        </quarkus.native.additional-build-args>
        <quarkus.native.enabled>true</quarkus.native.enabled>
        <quarkus.package.jar.enabled>false</quarkus.package.jar.enabled>
      </properties>
    </profile>

    <profile>
      <id>fips</id>
      <dependencies>
        <dependency>
          <groupId>io.quarkus</groupId>
          <artifactId>quarkus-security</artifactId>
        </dependency>

        <dependency>
          <groupId>org.bouncycastle</groupId>
          <artifactId>bc-fips</artifactId>
        </dependency>

        <dependency>
          <groupId>org.bouncycastle</groupId>
          <artifactId>bctls-fips</artifactId>
        </dependency>

        <dependency>
          <groupId>org.bouncycastle</groupId>
          <artifactId>bcpkix-fips</artifactId>
          <version>${bcpkix-fips.version}</version>
        </dependency>
      </dependencies>
    </profile>

    <profile>
      <id>coverage</id>
      <properties>
        <sonar.exclusions>
          <!--
            exclude:
             - exclude domain classes / model classes, which are essentially simple POJO classes
               most of their body is generated with lombok. here is nothing to test or analyse
          -->
          src/main/java/**/ssp/model/**,
          src/main/java/**/ssp/configuration/**
        </sonar.exclusions>
        <sonar.coverage.jacoco.xmlReportPaths>
          target/site/jacoco-aggregate/jacoco.xml
        </sonar.coverage.jacoco.xmlReportPaths>
      </properties>
      <build>
        <plugins>
          <plugin>
            <groupId>org.jacoco</groupId>
            <artifactId>jacoco-maven-plugin</artifactId>
            <version>${jacoco-maven-plugin.version}</version>
            <executions>
              <execution>
                <id>prepare-agent</id>
                <goals>
                  <goal>prepare-agent</goal>
                </goals>
                <configuration>
                  <exclClassLoaders>*QuarkusClassLoader</exclClassLoaders>
                  <destFile>${project.build.directory}/jacoco.exec</destFile>
                  <append>true</append>
                </configuration>
              </execution>
              <execution>
                <id>prepare-agent-integration</id>
                <goals>
                  <goal>prepare-agent-integration</goal>
                </goals>
                <configuration>
                  <destFile>${project.build.directory}/jacoco.exec</destFile>
                  <append>true</append>
                </configuration>
              </execution>
              <execution>
                <id>report</id>
                <phase>post-integration-test</phase>
                <goals>
                  <goal>report</goal>
                </goals>
                <configuration>
                  <dataFile>${project.build.directory}/jacoco.exec</dataFile>
                  <outputDirectory>${project.build.directory}/jacoco-report</outputDirectory>
                </configuration>
              </execution>
              <execution>
                <id>check</id>
                <phase>post-integration-test</phase>
                <goals>
                  <goal>check</goal>
                </goals>
                <configuration>
                  <dataFile>${project.build.directory}/jacoco.exec</dataFile>
                  <haltOnFailure>false</haltOnFailure>
                  <rules>
                    <rule>
                      <element>BUNDLE</element>
                      <limits>
                        <limit>
                          <counter>INSTRUCTION</counter>
                          <value>COVEREDRATIO</value>
                          <minimum>80%</minimum>
                        </limit>
                      </limits>
                    </rule>
                  </rules>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

  <repositories>
    <repository>
      <id>folio-nexus</id>
      <name>FOLIO Maven repository</name>
      <url>https://repository.folio.org/repository/maven-folio</url>
    </repository>

    <repository>
      <id>index-data-nexus</id>
      <name>FOLIO Maven repository</name>
      <url>https://maven.indexdata.com</url>
    </repository>
  </repositories>

  <distributionManagement>
    <repository>
      <id>folio-nexus</id>
      <name>FOLIO Release Repository</name>
      <url>https://repository.folio.org/repository/maven-releases/</url>
      <uniqueVersion>false</uniqueVersion>
      <layout>default</layout>
    </repository>
    <snapshotRepository>
      <id>folio-nexus</id>
      <name>FOLIO Snapshot Repository</name>
      <uniqueVersion>true</uniqueVersion>
      <url>https://repository.folio.org/repository/maven-snapshots/</url>
      <layout>default</layout>
    </snapshotRepository>
  </distributionManagement>

  <pluginRepositories>
    <pluginRepository>
      <id>folio-nexus</id>
      <name>FOLIO Maven repository</name>
      <url>https://repository.folio.org/repository/maven-folio</url>
    </pluginRepository>
  </pluginRepositories>

  <scm>
    <url>https://https://github.com/folio-org/folio-secure-store-proxy</url>
    <connection>scm:git:git://github.com:folio-org/folio-secure-store-proxy.git</connection>
    <developerConnection>scm:git:git@github.com:folio-org/folio-secure-store-proxy.git</developerConnection>
    <tag>HEAD</tag>
  </scm>
</project>
